{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\matet\\\\Documents\\\\Projects\\\\React\\\\Udemy\\\\nextjs-course2\\\\pages\\\\index.js\";\nimport Head from \"next/head\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n} // use this when data changes every second + you need the request/response objects\n\n/* export async function getServerSideProps(context) {\r\n\tconst req = context.req;\r\n\tconst res = context.res;\r\n\r\n\t// fetch data from an API code runs on the server\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetups: DUMMY_MEETUPS,\r\n\t\t},\r\n\t};\r\n} */\n\n\nexport async function getStaticProps() {\n  // fetch data from an API during the build process so not on the server not on the client\n  let meetups;\n\n  try {\n    const client = await MongoClient.connect(\"mongodb+srv://matetami:Tamiwarrior0913@cluster0.ythrc.mongodb.net/meetups?retryWrites=true&w=majority\");\n    const db = client.db();\n    const meetupsCollection = db.collection(\"meetups\");\n    meetups = await meetupsCollection.find().toArray();\n    client.close();\n  } catch (error) {\n    console.log(\"Error getting meetups data:\", error);\n  }\n\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    // incremental static generation\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/matet/Documents/Projects/React/Udemy/nextjs-course2/pages/index.js"],"names":["Head","MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","error","console","log","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACxB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,C,CAED;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACtC;AACA,MAAID,OAAJ;;AAEA,MAAI;AACH,UAAME,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACpB,uGADoB,CAArB;AAGA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEAN,IAAAA,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAhB;AAEAN,IAAAA,MAAM,CAACO,KAAP;AACA,GAXD,CAWE,OAAOC,KAAP,EAAc;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,KAA3C;AACA;;AAED,SAAO;AACNX,IAAAA,KAAK,EAAE;AACNC,MAAAA,OAAO,EAAEA,OAAO,CAACa,GAAR,CAAaC,MAAD,KAAa;AACjCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADmB;AAEjCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFiB;AAGjCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHmB;AAIjCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ6B,OAAb,CAAZ;AADH,KADD;AASN;AACAC,IAAAA,UAAU,EAAE;AAVN,GAAP;AAYA;AAED,eAAevB,QAAf","sourcesContent":["import Head from \"next/head\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nfunction HomePage(props) {\r\n\treturn <MeetupList meetups={props.meetups} />;\r\n}\r\n\r\n// use this when data changes every second + you need the request/response objects\r\n/* export async function getServerSideProps(context) {\r\n\tconst req = context.req;\r\n\tconst res = context.res;\r\n\r\n\t// fetch data from an API code runs on the server\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetups: DUMMY_MEETUPS,\r\n\t\t},\r\n\t};\r\n} */\r\n\r\nexport async function getStaticProps() {\r\n\t// fetch data from an API during the build process so not on the server not on the client\r\n\tlet meetups;\r\n\r\n\ttry {\r\n\t\tconst client = await MongoClient.connect(\r\n\t\t\t\"mongodb+srv://matetami:Tamiwarrior0913@cluster0.ythrc.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n\t\t);\r\n\t\tconst db = client.db();\r\n\r\n\t\tconst meetupsCollection = db.collection(\"meetups\");\r\n\r\n\t\tmeetups = await meetupsCollection.find().toArray();\r\n\r\n\t\tclient.close();\r\n\t} catch (error) {\r\n\t\tconsole.log(\"Error getting meetups data:\", error);\r\n\t}\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetups: meetups.map((meetup) => ({\r\n\t\t\t\ttitle: meetup.title,\r\n\t\t\t\taddress: meetup.address,\r\n\t\t\t\timage: meetup.image,\r\n\t\t\t\tid: meetup._id.toString(),\r\n\t\t\t})),\r\n\t\t},\r\n\t\t// incremental static generation\r\n\t\trevalidate: 1,\r\n\t};\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}