{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\matet\\\\Documents\\\\Projects\\\\React\\\\Udemy\\\\nextjs-course2\\\\pages\\\\index.js\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n} // use this when data changes every second + you need the request/response objects\n\n/* export async function getServerSideProps(context) {\r\n\tconst req = context.req;\r\n\tconst res = context.res;\r\n\r\n\t// fetch data from an API code runs on the server\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetups: DUMMY_MEETUPS,\r\n\t\t},\r\n\t};\r\n} */\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/matet/Documents/Projects/React/Udemy/nextjs-course2/pages/index.js"],"names":["Head","MeetupList","HomePage","props","meetups"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAGA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACxB,sBACC;AAAA,4BACC,QAAC,IAAD;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAIC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA,kBADD;AAQA,C,CAED;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAtBSF,Q;;AAyDT,eAAeA,QAAf","sourcesContent":["import Head from \"next/head\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nfunction HomePage(props) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>React Meetups</title>\r\n\t\t\t</Head>\r\n\t\t\t<MeetupList meetups={props.meetups} />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\n// use this when data changes every second + you need the request/response objects\r\n/* export async function getServerSideProps(context) {\r\n\tconst req = context.req;\r\n\tconst res = context.res;\r\n\r\n\t// fetch data from an API code runs on the server\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetups: DUMMY_MEETUPS,\r\n\t\t},\r\n\t};\r\n} */\r\n\r\nexport async function getStaticProps() {\r\n\t// fetch data from an API during the build process so not on the server not on the client\r\n\tlet meetups;\r\n\r\n\ttry {\r\n\t\tconst client = await MongoClient.connect(\r\n\t\t\t\"mongodb+srv://matetami:Tamiwarrior0913@cluster0.ythrc.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n\t\t);\r\n\t\tconst db = client.db();\r\n\r\n\t\tconst meetupsCollection = db.collection(\"meetups\");\r\n\r\n\t\tmeetups = await meetupsCollection.find().toArray();\r\n\r\n\t\tclient.close();\r\n\t} catch (error) {\r\n\t\tconsole.log(\"Error getting meetups data:\", error);\r\n\t}\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetups: meetups.map((meetup) => ({\r\n\t\t\t\ttitle: meetup.title,\r\n\t\t\t\taddress: meetup.address,\r\n\t\t\t\timage: meetup.image,\r\n\t\t\t\tid: meetup._id.toString(),\r\n\t\t\t})),\r\n\t\t},\r\n\t\t// incremental static generation\r\n\t\trevalidate: 1,\r\n\t};\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}